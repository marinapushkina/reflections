How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It was easier to spot the problem with less text/information around. 

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can learn from your mistakes. When you see repetion of the same kind of problem/error/bug than you know where you need improve your skills. You also can see all mistakes.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    You can choose yourself when is the best time to save the file and not to have so much clutter/files. It will save space and use history more efficiently.

    You also need to remind yourself to actually save the file and not relly on the autosave.


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    I think it is nice feature since some projects have multiple files which relate to each other. It makes work more organize and easy to use.

How can you use the commands git log and git diff to view the history of files?

    git log is for information
    git diff is for changes between files/commits


How might using version control make you more confident to make changes that
could break something?

    I have an option to go back and see/fix bugs/mistakes in previous versions.

Now that you have your workspace set up, what do you want to try using Git for?

    I want to learn the python
